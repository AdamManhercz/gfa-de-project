{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-project-de"
		},
		"databricks_conn_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'databricks_conn'"
		},
		"github_conn_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'github_conn'"
		},
		"stackoverflow_conn_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'stackoverflow_conn'"
		},
		"storage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'storage'"
		},
		"github_conn_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://decoursesacc.dfs.core.windows.net"
		},
		"rest_conn_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://de-course-ingest-api.azurewebsites.net/api/"
		},
		"storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://projectaccde.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Ingestion')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "landing_1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "landing_01",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_load_date": {
									"value": "@variables('v_load_date')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "landing_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "landing_02",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_load_date": {
									"value": "@replace(variables('v_load_date'), '07','08')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "landing_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "landing_03",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"p_load_date": {
									"value": "@replace(variables('v_load_date'), '0731','0930')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_load_date",
							"value": {
								"value": "@coalesce(pipeline().parameters.p_load_date, formatDateTime(addDays(pipeline().parameters.p_load_date, -1), 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220731"
					}
				},
				"variables": {
					"v_load_date": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/landing_01')]",
				"[concat(variables('factoryId'), '/pipelines/landing_02')]",
				"[concat(variables('factoryId'), '/pipelines/landing_03')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_01')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stackoverflow answers",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"additionalColumns": [
									{
										"name": "ingestion_date",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "stackoverflow_answers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stack_answers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Stackoverflow questions",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"additionalColumns": [
									{
										"name": "ingestion_date",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "stackovdrflow_questions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stack_questions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Github_1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "github_1",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220731"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "landing_github_1",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": {
										"value": "@variables('v_load_date')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Rest_1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "rest_1",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": {
										"value": "@variables('v_load_date')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "landing_rest_1",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": {
										"value": "@variables('v_load_date')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Load date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_load_date",
							"value": {
								"value": "@coalesce(pipeline().parameters.p_load_date, formatDateTime(addDays(pipeline().parameters.p_load_date, -1), 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_load_date": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stackoverflow_answers')]",
				"[concat(variables('factoryId'), '/datasets/stack_answers')]",
				"[concat(variables('factoryId'), '/datasets/stackovdrflow_questions')]",
				"[concat(variables('factoryId'), '/datasets/stack_questions')]",
				"[concat(variables('factoryId'), '/datasets/github_1')]",
				"[concat(variables('factoryId'), '/datasets/landing_github_1')]",
				"[concat(variables('factoryId'), '/datasets/rest_1')]",
				"[concat(variables('factoryId'), '/datasets/landing_rest_1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_02')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Github_2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "github_2",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220831"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "landing_github2",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220831"
								}
							}
						]
					},
					{
						"name": "Rest_2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "rest_2",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220831"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "landing_rest2",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220831"
								}
							}
						]
					},
					{
						"name": "Load date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_load_date",
							"value": {
								"value": "@coalesce(pipeline().parameters.p_load_date, formatDateTime(addDays(pipeline().parameters.p_load_date, -1), 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_load_date": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/github_2')]",
				"[concat(variables('factoryId'), '/datasets/landing_github2')]",
				"[concat(variables('factoryId'), '/datasets/rest_2')]",
				"[concat(variables('factoryId'), '/datasets/landing_rest2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_03')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Github_3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "github_3",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220930"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "landing_github3",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220930"
								}
							}
						]
					},
					{
						"name": "Rest_3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Load date",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "rest_3",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220930"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "landing_rest3",
								"type": "DatasetReference",
								"parameters": {
									"p_load_date": "20220930"
								}
							}
						]
					},
					{
						"name": "Load date",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "v_load_date",
							"value": {
								"value": "@coalesce(pipeline().parameters.p_load_date, formatDateTime(addDays(pipeline().parameters.p_load_date, -1), 'yyyyMMdd'))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					}
				},
				"variables": {
					"v_load_date": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/github_3')]",
				"[concat(variables('factoryId'), '/datasets/landing_github3')]",
				"[concat(variables('factoryId'), '/datasets/rest_3')]",
				"[concat(variables('factoryId'), '/datasets/landing_rest3')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingestion_to_landing",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Ingestion",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Landing_to_bronze",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Ingestion_to_landing",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Repos/manhercz.adam@gmail.com/gfa-de-project/etl/landing_to_bronze"
						},
						"linkedServiceName": {
							"referenceName": "databricks_conn",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Ingestion')]",
				"[concat(variables('factoryId'), '/linkedServices/databricks_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/github_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "github_conn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220731"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('githubarchive_day_',dataset().p_load_date,'.json')",
							"type": "Expression"
						},
						"folderPath": "github",
						"fileSystem": "external"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/github_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/github_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "github_conn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220831"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('githubarchive_day_',dataset().p_load_date,'.json')",
							"type": "Expression"
						},
						"folderPath": "github",
						"fileSystem": "external"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"public": {
							"type": "boolean"
						},
						"repo": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"url": {
									"type": "string"
								}
							}
						},
						"actor": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"login": {
									"type": "string"
								},
								"gravatar_id": {
									"type": "string"
								},
								"avatar_url": {
									"type": "string"
								},
								"url": {
									"type": "string"
								}
							}
						},
						"org": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"login": {
									"type": "string"
								},
								"gravatar_id": {
									"type": "string"
								},
								"avatar_url": {
									"type": "string"
								},
								"url": {
									"type": "string"
								}
							}
						},
						"created_at": {
							"type": "string"
						},
						"other": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/github_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/github_3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "github_conn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220930"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('githubarchive_day_',dataset().p_load_date,'.json')",
							"type": "Expression"
						},
						"folderPath": "github",
						"fileSystem": "external"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"public": {
							"type": "boolean"
						},
						"repo": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								},
								"url": {
									"type": "string"
								}
							}
						},
						"actor": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"login": {
									"type": "string"
								},
								"gravatar_id": {
									"type": "string"
								},
								"avatar_url": {
									"type": "string"
								},
								"url": {
									"type": "string"
								}
							}
						},
						"org": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"login": {
									"type": "string"
								},
								"gravatar_id": {
									"type": "string"
								},
								"avatar_url": {
									"type": "string"
								},
								"url": {
									"type": "string"
								}
							}
						},
						"created_at": {
							"type": "string"
						},
						"other": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/github_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_github2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220831"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('githubarchive_day_',dataset().p_load_date, '.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('github/',substring(dataset().p_load_date, 0,4),'/' ,substring(dataset().p_load_date, 4,2),'/',substring(dataset().p_load_date, 6,2),'/')\n",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Organization": {
							"type": "string"
						},
						"Repository account": {
							"type": "string"
						},
						"Repository name": {
							"type": "string"
						},
						"L1 type": {
							"type": "string"
						},
						"L2 type": {
							"type": "string"
						},
						"L3 type": {
							"type": "string"
						},
						"Tags": {
							"type": "string"
						},
						"Open source available": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_github3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220930"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('githubarchive_day_',dataset().p_load_date,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('github/', substring(dataset().p_load_date, 0,4), '/',substring(dataset().p_load_date, 4,2), '/', substring(dataset().p_load_date, 6,2), '/')\n",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Organization": {
							"type": "string"
						},
						"Repository account": {
							"type": "string"
						},
						"Repository name": {
							"type": "string"
						},
						"L1 type": {
							"type": "string"
						},
						"L2 type": {
							"type": "string"
						},
						"L3 type": {
							"type": "string"
						},
						"Tags": {
							"type": "string"
						},
						"Open source available": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_github_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('githubarchive_day_',dataset().p_load_date,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('github/',substring(dataset().p_load_date, 0,4),'/' ,substring(dataset().p_load_date, 4,2),'/',substring(dataset().p_load_date, 6,2),'/')",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_rest2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220831"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('company_detail_',dataset().p_load_date,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('company_detail/', substring(dataset().p_load_date, 0,4), '/',substring(dataset().p_load_date, 4,2), '/', substring(dataset().p_load_date, 6,2), '/')\n",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Organization": {
							"type": "string"
						},
						"Repository account": {
							"type": "string"
						},
						"Repository name": {
							"type": "string"
						},
						"L1 type": {
							"type": "string"
						},
						"L2 type": {
							"type": "string"
						},
						"L3 type": {
							"type": "string"
						},
						"Tags": {
							"type": "string"
						},
						"Open source available": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_rest3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('company_detail_',dataset().p_load_date,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('company_detail/', substring(dataset().p_load_date, 0,4), '/',substring(dataset().p_load_date, 4,2), '/', substring(dataset().p_load_date, 6,2), '/')\n",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"Organization": {
							"type": "string"
						},
						"Repository account": {
							"type": "string"
						},
						"Repository name": {
							"type": "string"
						},
						"L1 type": {
							"type": "string"
						},
						"L2 type": {
							"type": "string"
						},
						"L3 type": {
							"type": "string"
						},
						"Tags": {
							"type": "string"
						},
						"Open source available": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/landing_rest_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat('company_detail_',dataset().p_load_date,'.json')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('company_detail/', substring(dataset().p_load_date, 0,4), '/',substring(dataset().p_load_date, 4,2), '/', substring(dataset().p_load_date, 6,2), '/')",
							"type": "Expression"
						},
						"fileSystem": "landing"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rest_conn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220731"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('get_company_data_api?p_load_date=',dataset().p_load_date)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rest_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rest_conn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220831"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('get_company_data_api?p_load_date=',dataset().p_load_date)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rest_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "rest_conn",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"p_load_date": {
						"type": "string",
						"defaultValue": "20220930"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('get_company_data_api?p_load_date=',dataset().p_load_date)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rest_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stack_answers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "stackoverflow_post_answers.csv",
						"folderPath": "stackoverflow",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stack_questions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "stackoverflow_post_questions.csv",
						"folderPath": "stackoverflow",
						"fileSystem": "landing"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stackovdrflow_questions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stackoverflow_conn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "accepted_answer_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "answer_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "comment_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "community_owned_date",
						"type": "nvarchar"
					},
					{
						"name": "creation_date",
						"type": "nvarchar"
					},
					{
						"name": "favorite_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "last_activity_date",
						"type": "nvarchar"
					},
					{
						"name": "last_edit_date",
						"type": "nvarchar"
					},
					{
						"name": "last_editor_display_name",
						"type": "nvarchar"
					},
					{
						"name": "last_editor_user_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "owner_display_name",
						"type": "nvarchar"
					},
					{
						"name": "owner_user_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "parent_id",
						"type": "nvarchar"
					},
					{
						"name": "post_type_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "score",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "tags",
						"type": "nvarchar"
					},
					{
						"name": "view_count",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "stackoverflow",
					"table": "stackoverflow_post_questions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stackoverflow_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stackoverflow_answers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "stackoverflow_conn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "accepted_answer_id",
						"type": "nvarchar"
					},
					{
						"name": "answer_count",
						"type": "nvarchar"
					},
					{
						"name": "comment_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "community_owned_date",
						"type": "nvarchar"
					},
					{
						"name": "creation_date",
						"type": "nvarchar"
					},
					{
						"name": "favorite_count",
						"type": "nvarchar"
					},
					{
						"name": "last_activity_date",
						"type": "nvarchar"
					},
					{
						"name": "last_edit_date",
						"type": "nvarchar"
					},
					{
						"name": "last_editor_display_name",
						"type": "nvarchar"
					},
					{
						"name": "last_editor_user_id",
						"type": "nvarchar"
					},
					{
						"name": "owner_display_name",
						"type": "nvarchar"
					},
					{
						"name": "owner_user_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "parent_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "post_type_id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "score",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "tags",
						"type": "nvarchar"
					},
					{
						"name": "view_count",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "stackoverflow",
					"table": "stackoverflow_post_answers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/stackoverflow_conn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/databricks_conn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-7003187618222244.4.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('databricks_conn_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "13.3.x-scala2.12",
					"clusterOption": "Fixed",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/github_conn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('github_conn_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('github_conn_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_conn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('rest_conn_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stackoverflow_conn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('stackoverflow_conn_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('storage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		}
	]
}